@startuml ASTBase
skinparam style strictuml
skinparam monochrome true

interface ASTNode {
    getLine(): int
    getColumn(): int
}

class Program

interface Definition
class VarDefinition
class FuncDefinition

class RecordField
interface Type

interface Statement
interface Expression

class IntType
class CharType
class RealType
class VoidType
class ArrayType {
    arrayOf: Type
}
class RecordType {
    fields: List<RecordField>
}

class FuncType {
    parameters: List<VarDefinition>
    returnType: Type
}

class While {
    condition: Expression
    body: List<Statement>
}
class If {
    condition: Expression
    ifBody: List<Statement>
    elseBody: List<Statement>
}
class Return
class Invocation {
    name: Variable
    parameters: Expression
}
class Assignment
class Read
class Write

class Cast {
    castType: Type
}
class UnaryMinus
class UnaryNot
class Logical {
    operation: String
}
class Arithmetic {
    operation: char
}
class CharLiteral {
    value: char
}
class IntLiteral {
    value: int
}
class RealLiteral {
    value: double
}
class FieldAccess {
    field: String
}
class Indexing {
    array: Expression
    index: Expression
}
class Comparison {
    operation: String
}
class Variable {
    name: String
}

ASTNode <|.. Program

Definition <|.. VarDefinition
Definition <|.. FuncDefinition
Definition o-- "1" Type

Program o-- "1..n" Definition

VarDefinition <|.. RecordField

FuncDefinition o-- Statement

Statement <|.. VarDefinition

Type <|.. IntType
Type <|.. CharType
Type <|.. RealType
Type <|.. ArrayType
Type <|.. RecordType
Type <|.. VoidType
Type <|.. FuncType

ArrayType o-- "1" Type
RecordType o-- "1..n" RecordField
FuncType o-- "1" Type
FuncType o-- "0..n" VarDefinition

ASTNode <|-- Expression
Expression <|.. Cast
Expression <|.. UnaryMinus
Expression <|.. UnaryNot
Expression <|.. Variable
Expression <|.. Logical
Expression <|.. Arithmetic
Expression <|.. Comparison
Expression <|.. CharLiteral
Expression <|.. IntLiteral
Expression <|.. RealLiteral
Expression <|.. FieldAccess
Expression <|.. Indexing
Expression <|.. Invocation


ASTNode <|-- Statement
Statement <|.. Invocation
Statement <|.. While
Statement <|.. If
Statement <|.. Return
Statement <|.. Assignment
Statement <|.. Read
Statement <|.. Write

Cast o-- Expression
Cast o-- "1" Type
UnaryMinus o-- "1" Expression
UnaryNot o-- "1" Expression
Logical o-- "2" Expression
Arithmetic o-- "2" Expression
Comparison o-- "2" Expression
FieldAccess o-- "1" Expression
Indexing o-- "2" Expression

' Variable o-- Definition

If o-- "1" Expression
Return o-- "1" Expression
Assignment o-- "2" Expression
Read o-- "1" Expression
Write o-- "1" Expression

@enduml
